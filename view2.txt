# Este arquivo sera a parte visual. Aquilo ao qual o usuario ira interagir. 

function view_MostraMenu(){
	# limpa a tela e exibe o menu principal
	clear
	echo "+--------------------------------+"
	echo "|        A G E N D E X           |"
	echo "|                                |"
	echo "|            (1.0)               |"
	echo "|                                |"
	echo "|    by Leonardo A. Carrilho     |"
	echo "|                                |"
	echo "+------------ MENU --------------+"
	echo "|                                |"
	echo "|        1 - Add contato         |"
	echo "|        2 - Deleta contato      |"
	echo "|        3 - Lista tudo          |"
	echo "|        4 - Busca/ Edita        |"
	echo "|        0 - SAIR                |"
	echo "|                                |"
	echo "+--------------------------------+"
	echo ""
	
function model_ResetaVariaveis(){
    #limpa as variaveis
	nome=${nome=}
	numero=${numero=}
	PK=${PK=}
    key=${key=}
    arrayRetorno=${arrayRetorno=}
}   

function view_MostraAddContato(){
	#fornece uma interface para inserir contatoe
	echo "     [ADD CONTATO]"
	echo ""
	read -p "NOME: " nome
	read -p "NUMERO: " numero
	read -rp "Inserir outro telefone para $nome? (S/N)" -n 1 key
}

function interfaceDel(){
	#fornece a interface para a delecao dos dados
	local nome numero
	echo "     [DELETAR CONTATO]"
	echo ""
	echo "[1] Buscar por nome"
	echo "[2] Buscar por numero"
}

function interfaceLista(){
	echo "     [TODOS OS SEUS CONTATOS]"
	echo ""
	local cor=${cor=3}
    local i=${i=0}
	# Exibe os 2 arquivos (nome e numero) mesclados e em coluna
	#pr -m -t $namefile $phonefile
	# envia cada linha do arquivo para um indice do array
	mapfile -t arrayNome < $namefile
	mapfile -t arrayNumero < $phonefile
	for ((i=0; i < ${#arrayNome[@]}; i++)) 
	do
		# zebra a linha
		if [ $(($i % 2)) -eq 0 ]
		then
			# par			
			cor=2
		else
			# impar
			cor=3
		fi		
		# altera a cor do terminal		
		printf $(tput setaf $cor) $(tput setab 5)
		# exibe todos os contatos	
		echo $i ${arrayNome[$i]:12:100} ${arrayNumero[$i]:12:100}
		# reseta para cor default		
		printf $(tput sgr0)
	done
	echo ""
	echo "+------------------+---------------------------+"
	read -rp "|   Sair <ENTER>   |   Mais <nº da linha>: " key
}

function interfaceSearch(){
    local i=${i=0}
	# Se key estiver vazia (-z), pede que o user digite algo
    # Se key já contiver um valor, vai para o case
    if [ -z $key ]
    then
        echo "     [BUSCAR CONTATO]"
	    echo
        echo "[0] Buscar por nome"
	    echo "[1] Buscar por numero"
        read -rp "Opcao da busca: " -n 1 key    
        case $key in
            0) 
                read -p " Informe o nome: " nome
                classeVerifSeExisteContato $nome
            ;;
            1) 
                #read -p " Informe o numero: " numero
                #classeVerifSeExisteContato $numero
                read -p "Esta funcao esta temporariamente desabilitada :( "
                continue
            ;;
            *) 
                read -p " Opcao nao existe! <ENTER>"
                continue
            ;;
        esac
    fi
    # chama e passa parametros
    classeVerifSeExisteContato $nome $numero
    # recebe o valor da busca
	arrayRetorno=$(classeVerifSeExisteContato)
    #reseta var
    nome=${nome=}
    numero=${numero=}
    # exibira os contatos cujos dados informados sejam coincidentes
    interfaceDetalhesDoContato
}

function interfaceDetalhesDoContato(){
	clear
    # exibe o resultado	
	for ((i=0; i < ${#arrayRetorno[@]}; i++)) 
	do
	   echo " [$i] ${arrayRetorno[$i]}"
	done
	# Exibe opcoes ao user
	echo ""
	echo "+------------------+---------------------------+"
	read -rp "|   Sair <ENTER>   |   Mais <nº da linha>: " key
    # Verifica se escolheu Sair ou ter mais detalhes
    if [[ $key =~ ^([1-9]|[1-9]{1}[0-9]{1})$ ]]
    then
        # pega a chave primaria
        PK=${arrayRetorno[$key]:0:12}
        # busca no arquivo de numeros pela PK
        declare -a x
        x=$(grep $PK $phonefile)
        # Exibe toda informacao referente ao contato escolhido
        clear
        echo "              [INFO CONTATO]"
        echo ""
        echo "+---------------------------------------------------+"
        echo "| NOME     : " ${arrayRetorno[$key]:12:100}
        echo "| NUMERO 1 : " ${x[0]:12:50}
        echo "| NUMERO 2 : " ${x[1]:12:50}
        echo "+---------------+-------------+---------------------+"
        read -rp "| Sair <ENTER> | Editar <1> | Deletar <2>: " -n 1 key
        echo $key
    fi
}

function interfaceTchau(){
	local x=${x=null}	
	clear
	x=$(classeSorteiaFrase)
	echo "[AGENDEX]=> "$x
}
